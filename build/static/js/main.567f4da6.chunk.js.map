{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","importance","className","onClick","content","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","textAlign","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","service","initialNotes","notesToShow","filter","important","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","concat","placeholder","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"gOAiBeA,EAfF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACfC,EAAQF,EAAKG,WAAa,qBAAuB,iBAEvD,OACC,6BACC,wBAAIC,UAAU,QACb,4BAAQA,UAAU,MAAMC,QAASJ,GAC/BC,GAEDF,EAAKM,W,gBCQK,EAfA,WAEd,OADgBC,IAAMC,IAHP,cAIAC,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa7B,EAVA,SAACC,GAEf,OADgBL,IAAMM,KARP,aAQqBD,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ7B,EALA,SAACG,EAAIF,GAEnB,OADgBL,IAAMQ,IAAN,UAbD,aAaC,YAAwBD,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCN7BK,G,MARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAgB,OAAZA,EACI,KAGD,yBAAKb,UAAU,SAASa,KCD1BC,EAAS,WAQd,OACC,yBAAKC,MARc,CACnBC,MAAO,YACPC,UAAW,SACXC,SAAU,GACVC,UAAW,WAKV,6BACA,uGA+FYC,EAxFH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAIuBN,mBAAS,MAJhC,mBAIVO,EAJU,KAIIC,EAJJ,KAMjBC,qBAAU,WACTC,IAAiB1B,MAAK,SAAC2B,GACtBT,EAASS,QAER,IAEH,IAsCMC,EAAcP,EACjBJ,EACAA,EAAMY,QAAO,SAACtC,GAAD,OAA6B,IAAnBA,EAAKuC,aAE/B,OACC,yBAAKnC,UAAU,YACd,qCACA,kBAAC,EAAD,CAAca,QAASe,IACvB,6BACC,4BAAQ5B,UAAU,OAAOC,QAAS,kBAAM0B,GAAYD,KAApD,QACOA,EAAU,YAAc,QAGhC,yBAAK1B,UAAU,YACbiC,EAAYG,KAAI,SAACxC,GAAD,OAChB,kBAAC,EAAD,CACCyC,IAAKzC,EAAKc,GACVd,KAAMA,EACNC,iBAAkB,kBAxDI,SAACa,GAC3B,IAAMd,EAAO0B,EAAMgB,MAAK,SAACC,GAAD,OAAOA,EAAE7B,KAAOA,KAClC8B,EAAW,2BAAQ5C,GAAR,IAAcuC,WAAYvC,EAAKuC,YAEhDJ,EACSrB,EAAI8B,GACXnC,MAAK,SAACoC,GACNlB,EAASD,EAAMc,KAAI,SAACxC,GAAD,OAAWA,EAAKc,KAAOA,EAAKd,EAAO6C,SAEtDC,OAAM,SAACC,GACPd,EAAgB,SAAD,OACLjC,EAAKM,QADA,uCAGf0C,YAAW,WACVf,EAAgB,QACd,KACHN,EAASD,EAAMY,QAAO,SAACK,GAAD,OAAOA,EAAE7B,KAAOA,SAwCZmC,CAAmBjD,EAAKc,WAInD,0BAAMoC,SAxCQ,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAa,CAClB/C,QAASsB,EACT0B,KAAM,IAAIC,KACVhB,UAAWiB,KAAKC,SAAW,IAG5BtB,EAAekB,GAAY5C,MAAK,SAACoC,GAChClB,EAASD,EAAMgC,OAAOb,IACtBhB,EAAW,SA+BV,2BACCzB,UAAU,QACVuD,YAAY,kBACZC,MAAOhC,EACPiC,SA/BqB,SAACV,GACzBtB,EAAWsB,EAAMW,OAAOF,UAgCtB,4BAAQxD,UAAU,OAAO2D,KAAK,UAA9B,SAID,kBAAC,EAAD,QCvGHC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.567f4da6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\tconst label = note.importance ? \"Make not important\" : \"Make important\";\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<li className=\"note\">\r\n\t\t\t\t<button className=\"btn\" onClick={toggleImportance}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</button>\r\n\t\t\t\t{note.content}\r\n\t\t\t</li>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update };\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Note from \"./components/Note\";\r\nimport service from \"./services/notes\";\r\nimport \"./index.css\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: \"royalblue\",\r\n\t\tfontStyle: \"italic\",\r\n\t\tfontSize: 16,\r\n\t\ttextAlign: \"center\",\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>\r\n\t\t\t\tNote app, Department of Computer Science, University of Helsinki 2020\r\n\t\t\t</em>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst App = () => {\r\n\tconst [notes, setNotes] = useState([]);\r\n\tconst [newNote, setNewNote] = useState(\"\");\r\n\tconst [showAll, setShowAll] = useState(true);\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tservice.getAll().then((initialNotes) => {\r\n\t\t\tsetNotes(initialNotes);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst toggleImportanceOf = (id) => {\r\n\t\tconst note = notes.find((n) => n.id === id);\r\n\t\tconst changedNote = { ...note, important: !note.important };\r\n\r\n\t\tservice\r\n\t\t\t.update(id, changedNote)\r\n\t\t\t.then((returnedNote) => {\r\n\t\t\t\tsetNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t`Note '${note.content}' was already removed from server!`\r\n\t\t\t\t);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null);\r\n\t\t\t\t}, 5000);\r\n\t\t\t\tsetNotes(notes.filter((n) => n.id !== id));\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst addNote = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst noteObject = {\r\n\t\t\tcontent: newNote,\r\n\t\t\tdate: new Date(),\r\n\t\t\timportant: Math.random() < 0.5,\r\n\t\t};\r\n\r\n\t\tservice.create(noteObject).then((returnedNote) => {\r\n\t\t\tsetNotes(notes.concat(returnedNote));\r\n\t\t\tsetNewNote(\"\");\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleNoteChange = (event) => {\r\n\t\tsetNewNote(event.target.value);\r\n\t};\r\n\r\n\tconst notesToShow = showAll\r\n\t\t? notes\r\n\t\t: notes.filter((note) => note.important === true);\r\n\r\n\treturn (\r\n\t\t<div className=\"main-div\">\r\n\t\t\t<h1>Notes</h1>\r\n\t\t\t<Notification message={errorMessage} />\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"show\" onClick={() => setShowAll(!showAll)}>\r\n\t\t\t\t\tShow {showAll ? \"important\" : \"all\"}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"note-div\">\r\n\t\t\t\t{notesToShow.map((note) => (\r\n\t\t\t\t\t<Note\r\n\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<form onSubmit={addNote}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\tplaceholder=\"Type notes here\"\r\n\t\t\t\t\tvalue={newNote}\r\n\t\t\t\t\tonChange={handleNoteChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"save\" type=\"submit\">\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}